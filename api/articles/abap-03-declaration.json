{"title":"ABAP: Declaração de Dados","uid":"70f7a7177b4d809728709bdec7ca76a4","slug":"abap-03-declaration","date":"2022-11-06T17:26:58.602Z","updated":"2022-11-08T20:14:44.741Z","comments":true,"path":"api/articles/abap-03-declaration.json","keywords":["SAP","ABAP","Learn","Aprender","Software","Programação","Desenvolvimento","Desenvolvimento de Software"],"cover":"/img/default-cover.png","content":"<p>No ABAP existe uma infinidade distinta de dados que podem ser declarados, logo, este conteúdo aborda a declaração das principais <em>categorias dados</em>, sem focar nos <em>tipos de dados</em> pois estes serão abordados posteriormente.</p>\n<p>No ABAP podemos fazer as seguintes declarações:</p>\n<ul>\n<li>Tipos</li>\n<li>Variaveis</li>\n<li>Constantes</li>\n<li>Literais</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Como os tipo de dados no ABAP serão abordados posteriormente, vamos assumir em todos os exemplos os seguintes nomes fícticios como tipos de dados, para facilitar o entendimento:</p>\n<table>\n<thead>\n<tr>\n<th>Nome Fícticio</th>\n<th>Tipo</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>numero</td>\n<td>numérico</td>\n<td>aceita apenas numeros</td>\n</tr>\n<tr>\n<td>texto</td>\n<td>texto</td>\n<td>aceita qualquer caractere</td>\n</tr>\n</tbody></table></blockquote>\n<h3 id=\"Identificadores\"><a href=\"#Identificadores\" class=\"headerlink\" title=\"Identificadores\"></a>Identificadores</h3><p>Em programação, o ato de declarar dados implica em fornecer um nome simbólico para cada elemento declarado. Esses nomes são de chamados <em>identificadores</em> e sua declaração no ABAP obedecem às seguintes regras:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ul>\n<li>Devem conter apenas letras <code>A-Z</code>, digitos<code>0-9</code>e underline  <code>_</code></li>\n<li>Devem iniciar com letras ou underline, nunca com digitos</li>\n<li>Devem conter no máximo 30 caracteres</li>\n</ul></blockquote>\n<p>Violar qualquer uma dessas regras, impede a compilação do programa ABAP disparando um erro correspondente durante a tentativa de ativação do código.</p>\n<h3 id=\"Tipos\"><a href=\"#Tipos\" class=\"headerlink\" title=\"Tipos\"></a>Tipos</h3><p>No ABAP é possível criar <em>tipos de dados</em> customizados, dentro dos programas, usando a palavra-chave <em>TYPES</em>. Embora já existam diversos tipos de dados predefinidos, estes tipos predefinidos podem ser usados para descrever e compor outros tipos mais convenientes, como nos exemplos a seguir:</p>\n<h4 id=\"Tipo-Simples\"><a href=\"#Tipo-Simples\" class=\"headerlink\" title=\"Tipo Simples\"></a>Tipo Simples</h4><p>Representação de números de inscrição como CPF e CNPJ, pela declaração de <em>tipos simples</em>:</p>\n<pre class=\"line-numbers language-abap\" data-language=\"abap\"><code class=\"language-abap\"><span class=\"token keyword\">TYPES</span> tipo_cpf  <span class=\"token keyword\">TYPE</span> numero <span class=\"token keyword\">LENGTH</span> <span class=\"token number\">11</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">TYPES</span> tipo_cnpj <span class=\"token keyword\">TYPE</span> numero <span class=\"token keyword\">LENGTH</span> <span class=\"token number\">14</span><span class=\"token punctuation\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>Na declaração acima: </p>\n<ul>\n<li>A palavra-chave <em>TYPES</em> inicia a declaração do identificador</li>\n<li>A palavra-chave <em>TYPE</em> define qual será o tipo de dados</li>\n<li>A palavra-chave <em>LENGTH</em> define o comprimento máximo.</li>\n</ul>\n<p>Desse modo os tipos <em>tipo_cpf</em> e <em>tipo_cnpj</em> existem no programa e podem ser usados para declaração de variaveis e outros dados posteriormente. Os dados declarados com estes tipos vão obedecer as regras estabelecidas durante a criação do tipo customizado.</p>\n<p>A partir deste ponto, <em>tipos simples</em> serão nomeados com o prefixo <em>ty_</em> como abreviação de <em>types</em>: <code>ty_cpf</code> <code>ty_cnpj</code>.</p>\n<h4 id=\"Tipo-Composto-Estrutura\"><a href=\"#Tipo-Composto-Estrutura\" class=\"headerlink\" title=\"Tipo Composto: Estrutura\"></a>Tipo Composto: Estrutura</h4><p>Representação de informações básicas de uma pessoa, pela declaração de <em>tipos compostos</em>:</p>\n<pre class=\"line-numbers language-abap\" data-language=\"abap\"><code class=\"language-abap\"><span class=\"token keyword\">TYPES</span> ty_cpf <span class=\"token keyword\">TYPE</span> numero <span class=\"token keyword\">LENGTH</span> <span class=\"token number\">11</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">TYPES</span><span class=\"token punctuation\">:</span> \n  <span class=\"token keyword\">BEGIN</span> <span class=\"token keyword\">OF</span> ty_estrutura_pessoa<span class=\"token punctuation\">,</span>\n    nome      <span class=\"token keyword\">TYPE</span> texto<span class=\"token punctuation\">,</span>   <span class=\"token eol-comment comment\">\" campos</span>\n    idade     <span class=\"token keyword\">TYPE</span> numero<span class=\"token punctuation\">,</span>  <span class=\"token eol-comment comment\">\" campos</span>\n    cpf       <span class=\"token keyword\">TYPE</span> ty_cpf<span class=\"token punctuation\">,</span>  <span class=\"token eol-comment comment\">\" reutilização do tipo ty_cpf</span>\n  <span class=\"token keyword\">END</span> <span class=\"token keyword\">OF</span> ty_estrutura_pessoa<span class=\"token punctuation\">.</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>Na declaração acima: </p>\n<ul>\n<li>A palavra-chave <em>TYPES</em> com <code>:</code> inicia a declaração de tipos</li>\n<li>A palavra-chave <em>BEGIN OF</em> inicia a declaração do identificador do tipo composto</li>\n<li>As palavras-chave <em>BEGIN OF</em> e <em>END OF</em> marcam o inicio e o fim do tipo composto</li>\n<li>No meio, declara-se os identificadores para cada <em>campo</em> necessário</li>\n<li>A palavra-chave <em>TYPE</em> define o tipo de dados para cada campo declarado</li>\n</ul>\n<p>Este tipo é chamado de <em>Estrutura</em> e é composto primariamente por <em>campos</em>. Uma variavel declarada com <em>ty_estrutura_pessoa</em>, poderia representar internamente dados dos seus campos no seguinte formato:</p>\n<table>\n<thead>\n<tr>\n<th>Nome</th>\n<th>Idade</th>\n<th>CPF</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Tony Stark</td>\n<td>41</td>\n<td>00011100022</td>\n</tr>\n</tbody></table>\n<p>A partir deste ponto, <em>tipos estrutura</em> serão nomeados com o prefixo <em>ty_s_</em> como abreviação de <em>types structure</em>: <code>ty_s_pessoa</code>.</p>\n<h4 id=\"Tipo-Composto-Tabela\"><a href=\"#Tipo-Composto-Tabela\" class=\"headerlink\" title=\"Tipo Composto: Tabela\"></a>Tipo Composto: Tabela</h4><p>É possível reutilizar um <em>tipo simples</em> ou uma <em>estrutura</em> para criar outro tipo composto chamado <em>Tabela</em>. </p>\n<p>Declaração de <em>tipo tabela</em> com base em um <em>tipo simples</em>:</p>\n<pre class=\"line-numbers language-abap\" data-language=\"abap\"><code class=\"language-abap\"><span class=\"token keyword\">TYPES</span> ty_cpf        <span class=\"token keyword\">TYPE</span> numero <span class=\"token keyword\">LENGTH</span> <span class=\"token number\">11</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">TYPES</span> ty_tabela_cpf <span class=\"token keyword\">TYPE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">OF</span> ty_cpf<span class=\"token punctuation\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>Na declaração acima: </p>\n<ul>\n<li>A palavra-chave <em>TYPES</em> inicia a declaração do identificador</li>\n<li>A palavra-chave <em>TYPE TABLE OF</em> define qual o tipo da tabela</li>\n</ul>\n<p>Neste exemplo, <em>ty_cpf</em> define apenas um campo (tipo simples), logo a tabela irá possuir apenas uma <em>coluna</em> (cpf). Uma variavel declarada com <em>ty_tabela_cpf</em>, poderia representar seus dados no seguinte formato:</p>\n<table>\n<thead>\n<tr>\n<th>#</th>\n<th>CPF</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>00033366691</td>\n</tr>\n<tr>\n<td>2</td>\n<td>00033366692</td>\n</tr>\n<tr>\n<td>…</td>\n<td>…</td>\n</tr>\n<tr>\n<td>N</td>\n<td>0003336669N</td>\n</tr>\n</tbody></table>\n<p>Tabelas possuem linhas e colunas. As linhas são representadas pelos elementos adicionados à tabela, e as colunas são representadas pelos campos que compoem a tabela.</p>\n<p>A partir deste ponto, <em>tipos tabela</em> serão nomeados com o prefixo <em>ty_tt_</em> como abreviação de <em>types table type</em>: <code>ty_tt_cpf</code>.</p>\n<p>Declaração de <em>tipo tabela</em> com base em um <em>tipo composto</em>:</p>\n<pre class=\"line-numbers language-abap\" data-language=\"abap\"><code class=\"language-abap\"><span class=\"token keyword\">TYPES</span> ty_cpf <span class=\"token keyword\">TYPE</span> numero <span class=\"token keyword\">LENGTH</span> <span class=\"token number\">11</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">TYPES</span><span class=\"token punctuation\">:</span> \n  <span class=\"token keyword\">BEGIN</span> <span class=\"token keyword\">OF</span> ty_s_pessoa<span class=\"token punctuation\">,</span>\n    nome      <span class=\"token keyword\">TYPE</span> texto<span class=\"token punctuation\">,</span> \n    idade     <span class=\"token keyword\">TYPE</span> numero<span class=\"token punctuation\">,</span>\n    cpf       <span class=\"token keyword\">TYPE</span> ty_cpf<span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">END</span> <span class=\"token keyword\">OF</span> ty_s_pessoa<span class=\"token punctuation\">.</span> \n\n<span class=\"token keyword\">TYPES</span> ty_tt_pessoa <span class=\"token keyword\">TYPE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">OF</span> ty_s_pessoa<span class=\"token punctuation\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>Na declaração acima: </p>\n<ul>\n<li>A palavra-chave <em>TYPES</em> inicia a declaração do identificador</li>\n<li>A palavra-chave <em>TYPE TABLE OF</em> define qual o tipo da tabela</li>\n</ul>\n<p>Neste exemplo, <em>ty_s_pessoa</em> define três campos, logo a tabela irá possuir três <em>colunas</em> (nome, idade, cpf). Uma variavel declarada com <em>ty_s_pessoa</em>, poderia representar seus dados no seguinte formato:</p>\n<table>\n<thead>\n<tr>\n<th>#</th>\n<th>Nome</th>\n<th>Idade</th>\n<th>CPF</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>Tony Stark</td>\n<td>48</td>\n<td>00011100021</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Steve Rogers</td>\n<td>100</td>\n<td>00011100022</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Thor Odisson</td>\n<td>1554</td>\n<td>00011100023</td>\n</tr>\n<tr>\n<td>4</td>\n<td>Bruce Banner</td>\n<td>49</td>\n<td>00011100024</td>\n</tr>\n<tr>\n<td>5</td>\n<td>Natasha Romanoff</td>\n<td>34</td>\n<td>00011100025</td>\n</tr>\n<tr>\n<td>6</td>\n<td>Clint Barton</td>\n<td>47</td>\n<td>00011100026</td>\n</tr>\n<tr>\n<td>N</td>\n<td>…</td>\n<td>…</td>\n<td>…</td>\n</tr>\n</tbody></table>\n<h3 id=\"Variaveis\"><a href=\"#Variaveis\" class=\"headerlink\" title=\"Variaveis\"></a>Variaveis</h3><p>As <em>variáveis</em> servem para armazenar&#x2F;referenciar valores durante a execução de programas, através de um identificador. Seus valores podem <em>variar</em> sempre que necessário, de acordo com o seu tipo de dados. Elas também possuem as seguintes caracteristicas:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ul>\n<li>Devem especificar um tipo na declaração <em>Tipagem Estática</em></li>\n<li>Após declaradas, não podem mudar seu tipo em execução <em>Tipagem Forte</em></li>\n<li>São declaradas com a palavra-chave <em>DATA</em></li>\n</ul></blockquote>\n<p>A palavra-chave <em>DATA</em> permite declarar a maior parte dos dados, desde variaveis simples a estruturas, tabelas e objetos. </p>\n<p>As palavras-chave <em>TYPE</em> e <em>LIKE</em> permitem definir o tipo da variavel.</p>\n<h4 id=\"TYPE\"><a href=\"#TYPE\" class=\"headerlink\" title=\"TYPE\"></a>TYPE</h4><p>A palavra-chave <em>TYPE</em> define o tipo de dados de uma variavel com base em <em>tipos</em>:</p>\n<pre class=\"line-numbers language-abap\" data-language=\"abap\"><code class=\"language-abap\"><span class=\"token keyword\">DATA</span><span class=\"token punctuation\">:</span>\n  v_numero <span class=\"token keyword\">TYPE</span> numero<span class=\"token punctuation\">,</span>             \n  v_texto  <span class=\"token keyword\">TYPE</span> texto<span class=\"token punctuation\">,</span>             \n  v_cpf    <span class=\"token keyword\">TYPE</span> ty_cpf<span class=\"token punctuation\">,</span>             \n  s_pessoa <span class=\"token keyword\">TYPE</span> ty_s_pessoa<span class=\"token punctuation\">,</span>\n  t_pessoa <span class=\"token keyword\">TYPE</span> ty_tt_pessoa<span class=\"token punctuation\">,</span>   <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><em>Estruturas</em> podem ser obtidas através de um <em>tipo tabela</em> via <em>LINE OF</em>:</p>\n<pre class=\"line-numbers language-abap\" data-language=\"abap\"><code class=\"language-abap\"><span class=\"token keyword\">DATA</span> e_pessoa <span class=\"token keyword\">TYPE</span> <span class=\"token keyword\">LINE</span> <span class=\"token keyword\">OF</span> ty_tabela_pessoa<span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><em>Tabelas</em> podem ser obtidas através de <em>tipos simples</em> ou <em>estruturas</em> via <em>TABLE OF</em>:</p>\n<pre class=\"line-numbers language-abap\" data-language=\"abap\"><code class=\"language-abap\"><span class=\"token keyword\">DATA</span><span class=\"token punctuation\">:</span>\n  t_cpf    <span class=\"token keyword\">TYPE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">OF</span> ty_cpf<span class=\"token punctuation\">,</span>\n  t_pessoa <span class=\"token keyword\">TYPE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">OF</span> ty_s_pessoa<span class=\"token punctuation\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"LIKE\"><a href=\"#LIKE\" class=\"headerlink\" title=\"LIKE\"></a>LIKE</h4><p>A palavra-chave <em>TYPE</em> define o tipo de dados com base no tipo de uma <em>variavel existente</em>:</p>\n<pre class=\"line-numbers language-abap\" data-language=\"abap\"><code class=\"language-abap\"><span class=\"token keyword\">DATA</span><span class=\"token punctuation\">:</span>\n  v_cpf_01    <span class=\"token keyword\">TYPE</span> ty_cpf<span class=\"token punctuation\">,</span>  \n  v_cpf_02    <span class=\"token keyword\">LIKE</span> v_cpf_01<span class=\"token punctuation\">,</span>             <span class=\"token eol-comment comment\">\" ty_cpf</span>\n\n  s_pessoa_01 <span class=\"token keyword\">TYPE</span> ty_s_pessoa<span class=\"token punctuation\">,</span>  \n  s_pessoa_02 <span class=\"token keyword\">LIKE</span> s_pessoa_01<span class=\"token punctuation\">,</span>          <span class=\"token eol-comment comment\">\" ty_s_pessoa</span>\n\n  t_pessoa_01 <span class=\"token keyword\">TYPE</span> ty_tt_pessoa<span class=\"token punctuation\">,</span>  \n  t_pessoa_02 <span class=\"token keyword\">LIKE</span> t_pessoa_01<span class=\"token punctuation\">,</span>          <span class=\"token eol-comment comment\">\" ty_tt_pessoa</span>\n         \n  s_pessoa_03 <span class=\"token keyword\">LIKE</span> <span class=\"token keyword\">LINE</span> <span class=\"token keyword\">OF</span>  t_pessoa_01<span class=\"token punctuation\">,</span> <span class=\"token eol-comment comment\">\" apenas os campos de ty_tt_pessoa</span>\n  t_pessoa_03 <span class=\"token keyword\">LIKE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">OF</span> s_pessoa_01<span class=\"token punctuation\">.</span> <span class=\"token eol-comment comment\">\" colunas via campos de ty_s_pessoa</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"Tipos-Especiais\"><a href=\"#Tipos-Especiais\" class=\"headerlink\" title=\"Tipos Especiais\"></a>Tipos Especiais</h4><p><em>Ponteiros</em> são tipos referenciados declarados via <em>FIELD-SYMBOLS</em>:</p>\n<pre class=\"line-numbers language-abap\" data-language=\"abap\"><code class=\"language-abap\"><span class=\"token keyword\">FIELD-SYMBOLS</span> &lt;ponteiro> <span class=\"token keyword\">TYPE</span> <span class=\"token keyword\">any</span><span class=\"token punctuation\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><em>Tabelas</em> possuem tipos especiais, que serão abordados posteriormente:</p>\n<pre class=\"line-numbers language-abap\" data-language=\"abap\"><code class=\"language-abap\"><span class=\"token keyword\">DATA</span><span class=\"token punctuation\">:</span>\n  tabela_ordenada <span class=\"token keyword\">TYPE</span> <span class=\"token keyword\">SORTED</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">OF</span> database_table<span class=\"token punctuation\">,</span>\n  tabela_hashed   <span class=\"token keyword\">TYPE</span> <span class=\"token keyword\">HASHED</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">OF</span> database_table<span class=\"token punctuation\">,</span>\n  tabela_range    <span class=\"token keyword\">TYPE</span> <span class=\"token keyword\">RANGE</span> <span class=\"token keyword\">OF</span> data_element<span class=\"token punctuation\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><em>Objetos</em> obrigatóriamente devem utilizar <em>REF TO</em> para referenciar classes:</p>\n<pre class=\"line-numbers language-abap\" data-language=\"abap\"><code class=\"language-abap\"><span class=\"token keyword\">DATA</span> o_alv <span class=\"token keyword\">TYPE</span> <span class=\"token keyword\">REF</span> <span class=\"token keyword\">TO</span> cl_salv_table<span class=\"token punctuation\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n<h3 id=\"Constantes\"><a href=\"#Constantes\" class=\"headerlink\" title=\"Constantes\"></a>Constantes</h3><p>Em constantes também servem para armazenar&#x2F;referenciar valores durante a execução de programas como as <em>variaveis</em>, porém não podem ter o valor alterado após atribuição, assim como seu nome sugere.</p>\n<pre class=\"line-numbers language-abap\" data-language=\"abap\"><code class=\"language-abap\"><span class=\"token keyword\">CONSTANTS</span> carga_horaria_base <span class=\"token keyword\">TYPE</span> numero <span class=\"token keyword\">VALUE</span> <span class=\"token number\">8</span><span class=\"token punctuation\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>Na declaração acima, <em>CONSTANTS</em> inicia a declaração do identificador, <em>TYPE</em> define qual será o tipo de dados e <em>VALUE</em> define o valor.</p>\n<pre class=\"line-numbers language-abap\" data-language=\"abap\"><code class=\"language-abap\"><span class=\"token keyword\">CONSTANTS</span> c_carga_horaria_base <span class=\"token keyword\">TYPE</span> numero <span class=\"token keyword\">VALUE</span> <span class=\"token number\">8</span><span class=\"token punctuation\">.</span>\n\nc_carga_horaria_base <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">.</span>    <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>Caso haja uma tentativa de reatribuição do valor de uma constante, o ABAP não permitirá a compilação deste código disparando um erro durante a ativação, ex: </p>\n<ul>\n<li><em>c_carga_horaria_base cannot be modified</em>.</li>\n</ul>\n<p>Constantes comumente são usadas como valores somente leitura, para dar significado a valores que podem repetir diversas vezes em um código.</p>\n<pre class=\"line-numbers language-abap\" data-language=\"abap\"><code class=\"language-abap\"><span class=\"token keyword\">IF</span> v_carga_horaria_cumprida <span class=\"token operator\">></span> c_carga_horaria_base<span class=\"token punctuation\">.</span>\n  v_horas_extra <span class=\"token operator\">=</span> v_carga_horaria_cumprida <span class=\"token operator\">-</span> c_carga_horaria_base<span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">ENDIF</span><span class=\"token punctuation\">.</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Literais\"><a href=\"#Literais\" class=\"headerlink\" title=\"Literais\"></a>Literais</h3><p>Literais representam valores no código ABAP, são valores <em>literalmente</em> expressos no código pelo desenvolvedor quando necessário. Eles não representam variaveis, nem constantes e por não estarem referenciados são estáticos (valores fixos). Os valores literais podem ser do tipo:</p>\n<ul>\n<li>Numéricos</li>\n</ul>\n<pre class=\"line-numbers language-abap\" data-language=\"abap\"><code class=\"language-abap\"><span class=\"token number\">10880</span>            <span class=\"token eol-comment comment\">\" Valor numérico inteiro</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token number\">61803399</span>       <span class=\"token eol-comment comment\">\" Valor numérico decimal</span>\n<span class=\"token string\">'2.5e+5'</span>         <span class=\"token eol-comment comment\">\" Valor numérico em notação cientifica</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>Caracteres</li>\n</ul>\n<pre class=\"line-numbers language-abap\" data-language=\"abap\"><code class=\"language-abap\"><span class=\"token string\">'Malibu Point'</span>   <span class=\"token eol-comment comment\">\" Caracteres via (') aspas simples </span>\n<span class=\"token string\">`Golden Ratio`</span>   <span class=\"token eol-comment comment\">\" Caracteres via (`) crase </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>","feature":false,"text":"No ABAP existe uma infinidade distinta de dados que podem ser declarados, logo, este conteúdo aborda a declaração das principais categorias ...","link":"","photos":[],"count_time":{"symbolsCount":"8.7k","symbolsTime":"8 mins."},"categories":[{"name":"ABAP","slug":"ABAP","count":6,"path":"api/categories/ABAP.json"}],"tags":[{"name":"Guia ABAP","slug":"Guia-ABAP","count":8,"path":"api/tags/Guia-ABAP.json"},{"name":"Introdução ao ABAP","slug":"Introducao-ao-ABAP","count":7,"path":"api/tags/Introducao-ao-ABAP.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Identificadores\"><span class=\"toc-text\">Identificadores</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Tipos\"><span class=\"toc-text\">Tipos</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Tipo-Simples\"><span class=\"toc-text\">Tipo Simples</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Tipo-Composto-Estrutura\"><span class=\"toc-text\">Tipo Composto: Estrutura</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Tipo-Composto-Tabela\"><span class=\"toc-text\">Tipo Composto: Tabela</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Variaveis\"><span class=\"toc-text\">Variaveis</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#TYPE\"><span class=\"toc-text\">TYPE</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#LIKE\"><span class=\"toc-text\">LIKE</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Tipos-Especiais\"><span class=\"toc-text\">Tipos Especiais</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Constantes\"><span class=\"toc-text\">Constantes</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Literais\"><span class=\"toc-text\">Literais</span></a></li></ol>","author":{"name":"Edmilson A.","slug":"edmilson-a.","avatar":"/img/avatar.png","link":"/author","description":"Desenvolvendor de software, instrutor nas horas vagas, apaixonado por tecnologia e cultura japonesa.","socials":{"github":"https://github.com/edmilson-edaa","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"ABAP: Sintaxe","uid":"7dfad76e64f44c07b3d1c07e4d7f0901","slug":"abap-02-syntax","date":"2022-11-06T17:27:00.163Z","updated":"2022-11-06T17:32:22.109Z","comments":true,"path":"api/articles/abap-02-syntax.json","keywords":["SAP","ABAP","Learn","Aprender","Software","Programação","Desenvolvimento","Desenvolvimento de Software"],"cover":"/img/default-cover.png","text":"O ABAP possui uma sintaxe bastante baseada em palavras-chave como outras linguagens de sua geração (FORTRAN, COBOL, SQL, C++, …), mas também...","link":"","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[{"name":"ABAP","slug":"ABAP","count":6,"path":"api/categories/ABAP.json"}],"tags":[{"name":"Guia ABAP","slug":"Guia-ABAP","count":8,"path":"api/tags/Guia-ABAP.json"},{"name":"Introdução ao ABAP","slug":"Introducao-ao-ABAP","count":7,"path":"api/tags/Introducao-ao-ABAP.json"}],"author":{"name":"Edmilson A.","slug":"edmilson-a.","avatar":"/img/avatar.png","link":"/author","description":"Desenvolvendor de software, instrutor nas horas vagas, apaixonado por tecnologia e cultura japonesa.","socials":{"github":"https://github.com/edmilson-edaa","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},"next_post":{"title":"ABAP: Tipos de Dados","uid":"46768f5dde918bb1b3c6a0857f888585","slug":"abap-04-data","date":"2022-11-06T17:26:56.925Z","updated":"2022-11-07T21:04:51.421Z","comments":true,"path":"api/articles/abap-04-data.json","keywords":["SAP","ABAP","Learn","Aprender","Software","Programação","Desenvolvimento","Desenvolvimento de Software"],"cover":"/img/default-cover.png","text":"Todas as linguagens de programação têm tipos de dados e estruturas de dados embutidas, mas geralmente há diferenças nesses dados entres as l...","link":"","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[{"name":"ABAP","slug":"ABAP","count":6,"path":"api/categories/ABAP.json"}],"tags":[{"name":"Guia ABAP","slug":"Guia-ABAP","count":8,"path":"api/tags/Guia-ABAP.json"},{"name":"Introdução ao ABAP","slug":"Introducao-ao-ABAP","count":7,"path":"api/tags/Introducao-ao-ABAP.json"}],"author":{"name":"Edmilson A.","slug":"edmilson-a.","avatar":"/img/avatar.png","link":"/author","description":"Desenvolvendor de software, instrutor nas horas vagas, apaixonado por tecnologia e cultura japonesa.","socials":{"github":"https://github.com/edmilson-edaa","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false}}